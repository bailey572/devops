# --- indicates a new YAML file, not required but a good idea
---
# Specify Compose file version  specification in place
version: "3.3"
# Define the dictionary of services for compose file
services:
  # Define the dictionary for the ansible_manager service
  # A Service is an abstract definition of a computing resource within an application which can be scaled/replaced independently from other components.
  ansible_manager:
    # Set a static hostname in the image so we do not have to use IP's
    hostname: manager
    # Define the build section to define how to create the manager docker image
    build: 
      # Define relative path starting location
      context: '.'
      # Set location of Dockerfile for image build
      dockerfile: "./manager/Dockerfile"
    # define list of exposed ports that Compose implementations MUST expose from container.
    expose: 
      - 22
    # assign to ansible network
    volumes:
      - ../playbooks/:/root/playbooks:ro    # This will mount the dir as read only
    networks:
      - ansible_net
    # Tell compose to keep containers running interactive and with a tty
    stdin_open: true # docker run -i (interactive)
    tty: true        # docker run -t (tty)
  ansible_client1:
    # Set a static hostname in the image so we do not have to use IP's
    hostname: client1
    # Define the build section to define how to create the client docker image
    build: 
      # Define relative path starting location
      context: '.'
      # Set location of Dockerfile for image build
      dockerfile: "./client/Dockerfile"
    # define list of exposed ports that Compose implementations MUST expose from container.
    expose: 
      - 22
    # assign to ansible network
    networks:
      - ansible_net
    # Tell compose to keep containers running interactive and with a tty
    stdin_open: true # docker run -i (interactive)
    tty: true        # docker run -t (tty)

  ansible_client2:
    # Set a static hostname in the image so we do not have to use IP's
    hostname: client2
    # Define the build section to define how to create the client docker image
    build: 
      # Define relative path starting location
      context: '.'
      # Set location of Dockerfile for image build
      dockerfile: "./client/Dockerfile"
    # define list of exposed ports that Compose implementations MUST expose from container.
    expose: 
      - 22
    # assign to ansible network
    networks:
      - ansible_net
    # Tell compose to keep containers running interactive and with a tty
    stdin_open: true # docker run -i (interactive)
    tty: true        # docker run -t (tty)
  
  ansible_client3:
    # Set a static hostname in the image so we do not have to use IP's
    hostname: client3
    # Define the build section to define how to create the client docker image
    build: 
      # Define relative path starting location
      context: '.'
      # Set location of Dockerfile for image build
      dockerfile: "./AWSclient/Dockerfile"
    # define list of exposed ports that Compose implementations MUST expose from container.
    expose: 
      - 22
    # assign to ansible network
    networks:
      - ansible_net
    # Tell compose to keep containers running interactive and with a tty
    stdin_open: true # docker run -i (interactive)
    tty: true        # docker run -t (tty)

  webserver:
    # Set a static hostname in the image so we do not have to use IP's
    hostname: webserver
    # Define the build section to define how to create the client docker image
    build: 
      # Define relative path starting location
      context: '.'
      # Set location of Dockerfile for image build
      dockerfile: "./webserver/Dockerfile"
    # define list of exposed ports that Compose implementations MUST expose from container.
    expose: 
      - 22
    ports:
      - "127.0.0.1:8888:80"
    # assign to ansible network
    volumes:
      - ./webserver/apache:/var/www/html    # This will mount the dir as read only
    networks:
      - ansible_net
    # Tell compose to keep containers running interactive and with a tty
    stdin_open: true # docker run -i (interactive)
    tty: true        # docker run -t (tty)
networks:
  ansible_net:

