pipeline {
    environment {
    registry = "bailey572/capstone"
    registryCredential = 'docker-hub-credentials'
    dockerImage = ''
    }
    agent any
    
    stages {
        stage('Get the code'){
            steps {
                echo 'Pulling the code'
                git url: 'https://github.com/bailey572/devops.git', branch: 'main'
            }
        }
        stage('Build the code') {
            steps {
                echo 'Building the code'                 
                sh "/usr/bin/mvn -f 05_Capstone/docker/sampleTest/RetailWebApp/pom.xml compile"
            }
        }
        stage('Run the tests') {
            steps {
                echo 'Building the code' 
                sh "/usr/bin/mvn -f 05_Capstone/docker/sampleTest/RetailWebApp/pom.xml test"
            }
        }
        stage('Package the Webapp') {
            steps {
                echo 'Building the code'                 
                sh "/usr/bin/mvn -f 05_Capstone/docker/sampleTest/RetailWebApp/pom.xml package"
            }
        }
        stage('Build the image') {
            steps {
                echo 'Building the docker image'
                script {
                    dockerImage = docker.build(registry + ":$BUILD_NUMBER", "05_Capstone/docker/")
                } 
            }
        }
        stage('Verify local registry') {
            steps {
                echo 'Verfiy local registry running'                 
                script {                    
                    docker.withRegistry( "http://localhost:5000", '' ) {
                    dockerImage.push()
                    }
                }
            }
        }
        stage('Push to local registry') {
            steps {
                echo 'Pushing to local registry' 
                script {
                    docker.withRegistry( "http://localhost:5000", '' ) {
                    dockerImage.push()
                    }
                }
            }
        }
        stage('Deploy container from docker image') {
            steps{ 
                sh "docker run -d -p 8080 $registry:$BUILD_NUMBER "
            }
        }
        stage('Remove Unused docker image') {
            steps{
                sh "docker rmi $registry:$BUILD_NUMBER"
            }
        }
    }
}




//Build options
// Available lifecycle phases are: 
// *  validate
// *  initialize
// generate-sources
// process-sources
// generate-resources
// process-resources
// *  compile
// process-classes
// generate-test-sources
// process-test-sources
// generate-test-resources
// process-test-resources
// test-compile
// process-test-classes
// *  test
// prepare-package
// package
// pre-integration-test
// integration-test
// post-integration-test
// verify
// *  install
// deploy
// pre-clean
// *  clean
// post-clean
// pre-site
// site
// post-site
// site-deploy
// *  mvn clean
// *  mvn compile
// *  mvn test
// *  mvn install
// *  mvn tomcat7:run
