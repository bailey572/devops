<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1180.v04c4e75dce43">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2077.vc78ec45162f1"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2077.vc78ec45162f1">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description>CI/CD Pipeline to convert the legacy development process to a DevOps process that will build the project, run the included tests, create an updated image, store image in a local registry, deploy a container from the built image, </description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.workflow.job.properties.DisableConcurrentBuildsJobProperty>
      <abortPrevious>false</abortPrevious>
    </org.jenkinsci.plugins.workflow.job.properties.DisableConcurrentBuildsJobProperty>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.34.3">
      <projectUrl>https://github.com/bailey572/devops/</projectUrl>
      <displayName></displayName>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2689.v434009a_31b_f1">
    <script>pipeline {
    environment {
    registry = &quot;bailey572/capstone&quot;
    registryCredential = &apos;docker-hub-credentials&apos;
    dockerImage = &apos;&apos;
    }
    agent any
    
    stages {
        stage(&apos;Get the code&apos;){
            steps {
                echo &apos;Pulling the code&apos;
                git url: &apos;https://github.com/bailey572/devops.git&apos;, branch: &apos;main&apos;
            }
        }
        stage(&apos;Build the code&apos;) {
            steps {
                echo &apos;Building the code&apos;                 
                sh &quot;/usr/bin/mvn -f 05_Capstone/docker/sampleTest/RetailWebApp/pom.xml compile&quot;
            }
        }
        stage(&apos;Run the tests&apos;) {
            steps {
                echo &apos;Building the code&apos; 
                sh &quot;/usr/bin/mvn -f 05_Capstone/docker/sampleTest/RetailWebApp/pom.xml test&quot;
            }
        }
        stage(&apos;Package the Webapp&apos;) {
            steps {
                echo &apos;Building the code&apos;                 
                sh &quot;/usr/bin/mvn -f 05_Capstone/docker/sampleTest/RetailWebApp/pom.xml package&quot;
            }
        }
        stage(&apos;Build the image&apos;) {
            steps {
                echo &apos;Building the docker image&apos;
                script {
                    dockerImage = docker.build(registry + &quot;:$BUILD_NUMBER&quot;, &quot;05_Capstone/docker/&quot;)
                } 
            }
        }
        stage(&apos;Verify local registry&apos;) {
            steps {
                echo &apos;Verfiy local registry running&apos;                 
                script {                    
                    docker.withRegistry( &quot;http://localhost:5000&quot;, &apos;&apos; ) {
                    dockerImage.push()
                    }
                }
            }
        }
        stage(&apos;Push to local registry&apos;) {
            steps {
                echo &apos;Pushing to local registry&apos; 
                script {
                    docker.withRegistry( &quot;http://localhost:5000&quot;, &apos;&apos; ) {
                    dockerImage.push()
                    }
                }
            }
        }
        stage(&apos;Deploy container from docker image&apos;) {
            steps{ 
                sh &quot;docker run -d -p 8080 $registry:$BUILD_NUMBER &quot;
            }
        }
 
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>